{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { updateCommande } from \"../../features/commande/commandeSlice\";\nimport axios from \"axios\";\nconst useCommande = () => {\n  _s();\n  const listCommande = useSelector(state => state.commande);\n  const [isLoading, setisLoading] = useState(false);\n  const [isError, setisError] = useState(false);\n  const dispatch = useDispatch();\n\n  // rembourse une commande effectuer\n  const rembourser = id_payment => {\n    setisLoading(true);\n    axios.post(\"/api/commande/refund\", {\n      id_payment\n    }).then(res => dispatch(updateCommande(res.data))).catch(() => setisError(\"erreur lors du remboursement\")).finally(() => setisLoading(false));\n  };\n  return {\n    listCommande,\n    rembourser,\n    isLoading,\n    isError\n  };\n};\n_s(useCommande, \"uNL8aov5nkKjLZIfYacj/yJ48tk=\", false, function () {\n  return [useSelector, useDispatch];\n});\nexport default useCommande;","map":{"version":3,"names":["useState","useSelector","useDispatch","updateCommande","axios","useCommande","_s","listCommande","state","commande","isLoading","setisLoading","isError","setisError","dispatch","rembourser","id_payment","post","then","res","data","catch","finally"],"sources":["C:/Users/Amine/Pictures/PROJET/client/src/pages/Commande/useCommande.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateCommande } from \"../../features/commande/commandeSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst useCommande = () => {\r\n  const listCommande = useSelector((state) => state.commande);\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [isError, setisError] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // rembourse une commande effectuer\r\n  const rembourser = (id_payment) => {\r\n    setisLoading(true);\r\n    axios\r\n      .post(\"/api/commande/refund\", { id_payment })\r\n      .then((res) => dispatch(updateCommande(res.data)))\r\n      .catch(() => setisError(\"erreur lors du remboursement\"))\r\n      .finally(() => setisLoading(false));\r\n  };\r\n\r\n  return { listCommande, rembourser, isLoading, isError };\r\n};\r\nexport default useCommande;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,cAAc,QAAQ,uCAAuC;AACtE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,YAAY,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EAC3D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMa,UAAU,GAAIC,UAAU,IAAK;IACjCL,YAAY,CAAC,IAAI,CAAC;IAClBP,KAAK,CACFa,IAAI,CAAC,sBAAsB,EAAE;MAAED;IAAW,CAAC,CAAC,CAC5CE,IAAI,CAAEC,GAAG,IAAKL,QAAQ,CAACX,cAAc,CAACgB,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACjDC,KAAK,CAAC,MAAMR,UAAU,CAAC,8BAA8B,CAAC,CAAC,CACvDS,OAAO,CAAC,MAAMX,YAAY,CAAC,KAAK,CAAC,CAAC;EACvC,CAAC;EAED,OAAO;IAAEJ,YAAY;IAAEQ,UAAU;IAAEL,SAAS;IAAEE;EAAQ,CAAC;AACzD,CAAC;AAACN,EAAA,CAlBID,WAAW;EAAA,QACMJ,WAAW,EAIfC,WAAW;AAAA;AAc9B,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}